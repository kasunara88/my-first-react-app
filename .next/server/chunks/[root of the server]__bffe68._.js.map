{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/wijamunigekasunaravinda/Desktop/SEProject/ReactJS/my-first-react-app/app/api/v1/register/route.js"],"sourcesContent":["import { NextResponse } from \"next/server\";\n\nexport const POST = async (req) => {\n  try {\n    const { name, email, password } = await req.json();\n\n    if (!name || !email || !password) {\n      return NextResponse.json(\n        { error: \"Name, email and password are required\" },\n        { status: 400 }\n      );\n    }\n    const client = await clientPromise();\n    const db = client.db(\"sample_mflix\");\n\n    const existingUsers = await db.collection(\"users\").findOne({ email });\n\n    return NextResponse.json({ success: true, name, email });\n  } catch (error) {\n    console.log(\"MONGODB ERROR\", error);\n    return NextResponse.json(\n      { error: \"Internal Server Error\" },\n      { status: 500 }\n    );\n  }\n};\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,OAAO,OAAO;IACzB,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;QAEhD,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU;YAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAwC,GACjD;gBAAE,QAAQ;YAAI;QAElB;QACA,MAAM,SAAS,MAAM;QACrB,MAAM,KAAK,OAAO,EAAE,CAAC;QAErB,MAAM,gBAAgB,MAAM,GAAG,UAAU,CAAC,SAAS,OAAO,CAAC;YAAE;QAAM;QAEnE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM;YAAM;QAAM;IACxD,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC,iBAAiB;QAC7B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}